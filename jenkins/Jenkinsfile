@Library('jenkins-pipeline-library') _

pipeline {
    agent any
    environment {
        CONTAINER_NAME = "ubuntu-shell"
        MY_DEMO_VAR = "Hello, World!"
        // REGISTRY = withCredentials([vaultString(credentialsId: 'container-registry', variable: 'REGISTRY_NAME')])
        // REGISTRY_ACCOUNT = withCredentials([usernamePassword(credentialsId: 'container-registry-user', usernameVariable: 'REGISTRY_USER', passwordVariable: 'REGISTRY_PASS')])
        LOCAL_IMAGE = "ubuntu-shell:${BRANCH_NAME}"
        REMOTE_IMAGE = "${REGISTRY_NAME}/${REGISTRY_USER}/${LOCAL_IMAGE}"
    }
    stages {
        stage ('Build docker image') {
            steps {
                script {
                    echo "[STAGE] > Build docker image"
                    dockerBuild "${LOCAL_IMAGE}", 'docker/Dockerfile', ['NEW_USER':'gabriele']
                }
            }
        }
        stage ('Push to container registry') {
            steps {
                script {
                    echo "[STAGE] > Push to container registry"
                    dockerLogin "${REGISTRY_NAME}", 'container-registry-user'
                    dockerTag "${LOCAL_IMAGE}" "${REMOTE_IMAGE}"
                    dockerPush "${REMOTE_IMAGE}"
                }
            }
        }
        stage ('Cleanup') {
            steps {
                script {
                    echo "[STAGE] > Cleanup"
                    dockerRmi "${LOCAL_IMAGE}"
                    dockerRmi "${REMOTE_IMAGE}"
                }
            }
        }
    }
}